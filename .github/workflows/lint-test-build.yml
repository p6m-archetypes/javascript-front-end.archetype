name: Lint-Build-Test

on:
  pull_request:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
  NODE_OPTIONS: --max_old_space_size=4096

jobs:
  lint-build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout  
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install archetect from crates.io
        uses: baptiste0928/cargo-install@v2
        with:
          crate: archetect

      - name: archetect version
        run: archetect --version

      - name: archetect render
        run: archetect render ${{ github.workspace }}

      - name: generate react app
        run: |
          cd front-end-apps
          pnpm update-nax
          pnpm exec nx generate @nax-tech/react:application --name=ra --no-interactive
          pnpm exec nx generate @nax-tech/react:component --name=component1 --project=components-web --no-interactive
          pnpm exec nx generate @nax-tech/react:library --name=library1 --importPath=path --no-interactive
          pnpm exec nx generate @nax-tech/react:context --name=context1 --project=context --no-interactive
          pnpm exec nx generate @nax-tech/react:service --name=service1 --project=services --no-interactive
          pnpm exec nx generate @nax-tech/react:form --name=form1 --fields=firstName --project=components-web --no-interactive
          pnpm exec nx generate @nax-tech/react:integrate-graphql --devUrl=devUrl --project=ra --no-interactive
          pnpm exec nx generate @nax-tech/react:integrate-pwa --project=ra --no-interactive
          pnpm install
          pnpm exec nx generate @nax-tech/react:integrate-auth --audience=audience --clientId=clientId --domain=domain --project=ra --no-interactive
          pnpm exec nx generate @nax-tech/react:integrate-gtm --id=tagId --project=ra --no-interactive
          pnpm add react-gtm-module @types/react-gtm-module
          pnpm exec nx generate @nax-tech/react:integrate-flags --devClientSideId=id --project=ra --no-interactive
          pnpm add @nax-tech/feature-flags-react
          pnpm exec nx generate @nax-tech/react:integrate-logger --devApiKey=apiKey --devUrl=url --project=ra --no-interactive

      - name: generate next app
        run: |
          cd front-end-apps
          pnpm exec nx generate @nax-tech/next:application --name=next --no-interactive
          pnpm exec nx generate @nax-tech/next:service-content --contentType=wwww --project=next --no-interactive
          pnpm exec nx generate @nax-tech/next:integrate-gtm --id=q111 --project=next --no-interactive
          pnpm exec nx generate @nax-tech/next:integrate-logger --devApiKey=key --devUrl=url --project=next --no-interactive

      - name: ls fodler
        run: |
          cd front-end-apps/apps
          ls

      - name: run-many lint
        run: |
          cd front-end-apps
          pnpm nx run-many --all --skip-nx-cache --parallel -t lint

      - name: run-many test
        run: |
          cd front-end-apps
          pnpm nx run-many --all --skip-nx-cache --parallel -t test

      - name: run-many build
        run: |
          cd front-end-apps
          pnpm nx run-many --all --skip-nx-cache --parallel -t build
